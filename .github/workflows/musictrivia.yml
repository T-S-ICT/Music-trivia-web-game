name: MusicTrivia

on:
  push:
    branches:
      - feature-sonarqube
    
  pull_request:
   types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'gradle'
        
    - name: Build with Gradle
      run: |
        cd MusicTrivia
        chmod +x gradlew
        ./gradlew assemble --no-daemon

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'gradle'

    - name: Test with Gradle
      run: |
        cd MusicTrivia
        chmod +x gradlew
        ./gradlew test

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu' # Alternative distribution options are available

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            cd MusicTrivia
            chmod +x gradlew
            ./gradlew build sonar --info
     
  docker:
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'gradle'

    - name: Build with Gradle
      run: |
        cd MusicTrivia
        chmod +x gradlew
        ./gradlew assemble --no-daemon

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        cd MusicTrivia
        docker build -t tonyj3/music-trivia-backend:latest .
        docker push tonyj3/music-trivia-backend:latest
    
